# -*- coding: utf-8 -*-
"""Bert-QA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TcbYjjiQQE9UDYoTtdl8dIjUAQKz11xf
"""

!pip install transformers

import torch
from transformers import BertTokenizer, BertModel, BertForMaskedLM, BertForQuestionAnswering

## initialize the model
tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')
model = BertForQuestionAnswering.from_pretrained('bert-large-uncased-whole-word-masking-finetuned-squad')

### Please note here that encoding are given as  
#                 0 0 0 0 0 0 0 (denote question) while 1 1 1 1 1 1 1 (denotes answers / knowledge )
question, text = "Who was Jim Henson?", "Jim Henson was a nice puppet"
input_text = "[CLS] " + question + " [SEP] " + text + " [SEP]"

input_ids = tokenizer.encode(input_text)

## doing what we defined above f

token_type_ids = [0 if i <= input_ids.index(102) else 1 for i in range(len(input_ids))]

## what is torch.tensor

start_scores, end_scores = model(torch.tensor([input_ids]), token_type_ids=torch.tensor([token_type_ids]))

all_tokens = tokenizer.convert_ids_to_tokens(input_ids)


print(' '.join(all_tokens[torch.argmax(start_scores) : torch.argmax(end_scores)+1]))
# a nice puppet

input_ids

all_tokens

end_scores

start_scores

print(' '.join(all_tokens[torch.argmax(start_scores) : torch.argmax(end_scores)+1]))

torch.argmax(start_scores)

torch.argmax(end_scores)